application:
  title: Almacen de Peliculas
  ms_name: Peliculas
  version: Sprint 5
  author: Carlos Farra
  lastUpdate: Sabado 21 de Noviembre 2024

server:
  port: ${PELICULAS_PORT}

spring:
  application:
    name: pelicula
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:postgresql://${PELICULAS_DB_HOST}:${PELICULAS_DB_PORT}/${PELICULAS_DB_SCHEME}
    username: ${PELICULAS_DB_USER}
    password: ${PELICULAS_DB_PASS}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI}
          jwk-set-uri: ${KEYCLOAK_JWK_URI}
  jmx:
    enabled: true
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASS}


springdoc:
  api-docs:
    path: /api-docs

minio:
  endpoint: ${MINIO_URL}
  user: ${MINIO_USER}
  pass: ${MINIO_PASS}
  bucket: ${MINIO_BUCKET}

rabbitmq:
  event:
    exchange:
      eventos: exchange_videocloud02
      users: keycloaktaller
    movie:
      queue:
        name: movieQueue
      routing:
        key: Pelicula.#
    usuario:
      queue:
        name: videoclub02
      routing:
        key: KK.EVENT.*.videoclub02.#

page_tam:
  pelicula: 10
